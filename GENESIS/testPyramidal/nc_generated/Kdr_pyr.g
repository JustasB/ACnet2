

// **************************************************
// File generated by: neuroConstruct v1.7.0 
// **************************************************

// This file holds the implementation in GENESIS of the Cell Mechanism:
// Kdr_pyr (Type: Channel mechanism, Model: Template based ChannelML file)

// with parameters: 
// /channelml/@units = SI Units 
// /channelml/notes = ChannelML file containing a single Potassium Channel description, from the Hippocampal CA3 neuron model presented in Traub et al., 1991. 
// /channelml/channel_type/@name = Kdr_pyr 
// /channelml/channel_type/@density = yes 
// /channelml/channel_type/status/@value = in_progress 
// /channelml/channel_type/status/comment = Transcribed from the Genesis implementation by David Beeman 
// /channelml/channel_type/status/contributor[1]/name = Padraig Gleeson 
// /channelml/channel_type/status/contributor[2]/name = Boris Marin 
// /channelml/channel_type/authorList/modelTranslator[1]/name = Padraig Gleeson 
// /channelml/channel_type/authorList/modelTranslator[1]/institution = UCL 
// /channelml/channel_type/authorList/modelTranslator[1]/email = p.gleeson - at - ucl.ac.uk 
// /channelml/channel_type/authorList/modelTranslator[2]/name = Boris Marin 
// /channelml/channel_type/authorList/modelTranslator[2]/institution = UCL 
// /channelml/channel_type/authorList/modelTranslator[2]/email = b.marin - at - ucl.ac.uk 
// /channelml/channel_type/publication/fullTitle = Traub, R. D., Wong, R. K., Miles, R., and Michelson, H. (1991). A model of a CA3 hippocampal pyramidal neuron incorporating voltage-clamp data on intr ... 
// /channelml/channel_type/publication/pubmedRef = http://www.ncbi.nlm.nih.gov/pubmed/1663538 
// /channelml/channel_type/neuronDBref/modelName = K channels 
// /channelml/channel_type/neuronDBref/uri = http://senselab.med.yale.edu/neurondb/NeuronProp.aspx?id=259&amp;mo=1&amp;re=&amp;pr=C 
// /channelml/channel_type/current_voltage_relation/@cond_law = ohmic 
// /channelml/channel_type/current_voltage_relation/@ion = k 
// /channelml/channel_type/current_voltage_relation/@default_erev = -0.075 
// /channelml/channel_type/current_voltage_relation/@default_gmax = 4.98e-07 
// /channelml/channel_type/current_voltage_relation/gate/@name = n 
// /channelml/channel_type/current_voltage_relation/gate/@instances = 1 
// /channelml/channel_type/current_voltage_relation/gate/closed_state/@id = n0 
// /channelml/channel_type/current_voltage_relation/gate/open_state/@id = n 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@name = alpha 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@from = n0 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@to = n 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@expr_form = exp_linear 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@rate = 8e1 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@scale = 5e-3 
// /channelml/channel_type/current_voltage_relation/gate/transition[1]/@midpoint = -2.49e-2 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@name = beta 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@from = n 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@to = n0 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@expr_form = exponential 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@rate = 2.5e2 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@scale = -4e-2 
// /channelml/channel_type/current_voltage_relation/gate/transition[2]/@midpoint = -4e-2 
// /channelml/channel_type/impl_prefs/table_settings/@max_v = 0.05 
// /channelml/channel_type/impl_prefs/table_settings/@min_v = -0.1 
// /channelml/channel_type/impl_prefs/table_settings/@table_divisions = 3000 

// File from which this was generated: /home/boris/git/ACnet2/neuroConstruct/cellMechanisms/Kdr_pyr/Kd.xml

// XSL file with mapping to simulator: /home/boris/git/ACnet2/neuroConstruct/cellMechanisms/Kdr_pyr/ChannelML_v1.8.1_GENESIStab.xsl



// This is a GENESIS script file generated from a ChannelML v1.8.1 file
// The ChannelML file is mapped onto a tabchannel object


// Units of ChannelML file: SI Units, units of GENESIS file generated: SI Units

/*
    ChannelML file containing a single Potassium Channel description, from the Hippocampal CA3 neuron model presented in Traub et al., 1991.
*/

function make_Kdr_pyr

        str chanpath = "/library/Kdr_pyr"

        if ({exists {chanpath}})
            return
        end
        
        create tabchannel {chanpath}
            

        setfield {chanpath} \ 
            Ek              -0.075 \
            Ik              0  \
            Xpower          1
        
        setfield {chanpath} \
            Gbar 4.98e-07 \
            Gk              0 

        
        // No Q10 temperature adjustment found
        float temp_adj_n = 1
    

        float tab_divs = 3000
        float v_min = -0.1

        float v_max = 0.05

        float v, dv, i
            
        // Creating table for gate n, using name X for it here

        float dv = ({v_max} - {v_min})/{tab_divs}
            
        call {chanpath} TABCREATE X {tab_divs} {v_min} {v_max}
                
        v = {v_min}

            

        for (i = 0; i <= ({tab_divs}); i = i + 1)
            
            // Looking at rate: alpha
                

            float alpha
                
            float A, B, Vhalf
                             

            // ChannelML form of equation: alpha which is of form exp_linear, with params:
            // A = 8e1, B = 5e-3, Vhalf = -2.49e-2, in units: SI Units
            A = 8e1
            B = 5e-3
            Vhalf = -2.49e-2
            

            if ( {abs {(v - Vhalf)/ B}} < 1e-6)
                alpha = A * (1 + (v - Vhalf)/B/2)
            else
                alpha = A * ((v - Vhalf) / B) /(1 - {exp {-1 * (v - Vhalf)/B}})
            end

        
            // Looking at rate: beta
                

            float beta
                
            float A, B, Vhalf
                             

            // ChannelML form of equation: beta which is of form exponential, with params:
            // A = 2.5e2, B = -4e-2, Vhalf = -4e-2, in units: SI Units
            A = 2.5e2
            B = -4e-2
            Vhalf = -4e-2
            beta = A * {exp {(v - Vhalf) / B}}
        

            // Using the alpha and beta expressions to populate the tables

            float tau = 1/(temp_adj_n * (alpha + beta))
            
            setfield {chanpath} X_A->table[{i}] {temp_adj_n * alpha}
            setfield {chanpath} X_B->table[{i}] {temp_adj_n * (alpha + beta)}
                    
            v = v + dv

        end // end of for (i = 0; i <= ({tab_divs}); i = i + 1)
            
        setfield {chanpath} X_A->calc_mode 1 X_B->calc_mode 1
                    


end

